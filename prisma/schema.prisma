generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int           @id @default(autoincrement())
  email                  String        @unique
  isEmailConfirmed       Boolean       @default(false)
  phoneNumber            String        @unique
  isPhoneNumberConfirmed Boolean       @default(false)
  password               String
  status                 UserStatus    @default(PENDING)
  isAdmin                Boolean       @default(false)
  isContentCreator       Boolean       @default(false)
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  privateFiles           PrivateFile[]
  publicFiles            PublicFile[]
}

model PrivateFile {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  ownerId   Int
  createdAt DateTime @default(now())
  owner     User     @relation(fields: [ownerId], references: [id])
}

model PublicFile {
  id        Int      @id @default(autoincrement())
  url       String   @unique
  key       String   @unique
  ownerId   Int
  createdAt DateTime @default(now())
  owner     User     @relation(fields: [ownerId], references: [id])
}

model Genre {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  singleMovies SingleMovie[]
}

model Language {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  singleMovies SingleMovie[]
}

model SingleMovie {
  id            Int        @id @default(autoincrement())
  title         String
  description   String
  duration      String
  posterUrl     String
  trailerUrl    String
  videoUrl      String
  filesFolder   String
  isPremiering  Boolean    @default(false)
  price         String
  views         Int        @default(0)
  likeDislikeId Int        @default(0)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  genres        Genre[]
  languages     Language[]
}

model Log {
  id        Int      @id @default(autoincrement())
  context   String   @default("debug")
  level     String
  message   String
  stack    String?
  createdAt DateTime @default(now())
}

enum UserStatus {
  PENDING
  ACTIVE
  INACTIVE
}
